name: build
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        context: [., slim, head, opam-slim]
        platform:
          - linux/amd64
          # - linux/arm64
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      - uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ matrix.context }}-${{ matrix.platform }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ matrix.context }}-${{ matrix.platform }}-
      - id: args
        run: |
          echo "::set-output name=date::$(date --iso-8601=seconds)"
          echo "::set-output name=revision::$(git rev-parse --short HEAD)"
      - uses: docker/build-push-action@v2
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.context }}/Dockerfile
          push: false
          load: true
          tags: amutake/satysfi:ci
          build-args: |
            BUILD_DATE=${{ steps.args.outputs.date }}
            VERSION=ci
            REVISION=${{ steps.args.outputs.revision }}
          platforms: ${{ matrix.platform }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      # run tests
      - run: docker run --rm amutake/satysfi:ci satysfi --help
      - run: docker run --rm amutake/satysfi:ci satyrographos help
      - run: docker run --rm -v $(pwd)/tests:/satysfi amutake/satysfi:ci satysfi minimum.saty
      - run: docker run --rm -v $(pwd)/tests:/satysfi amutake/satysfi:ci satysfi with-dist.saty
      - run: docker run --rm -v $(pwd)/tests:/satysfi amutake/satysfi:ci sh -c "opam install satysfi-base --ignore-constraints-on=satysfi && satyrographos install && satysfi with-base.saty"
        if: ${{ matrix.context == '.' || matrix.context == 'opam-slim' }}
