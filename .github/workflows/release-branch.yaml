name: release-branch
on:
  workflow_dispatch:
    inputs:
      branch:
        description: "Branch name"
        required: true
        default: "master"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          - linux/amd64
          # - linux/arm64
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-branch-${{ github.event.inputs.branch }}-${{ matrix.platform }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-branch-${{ github.event.inputs.branch }}-${{ matrix.platform }}-
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
      - id: args
        run: |
          echo "date=$(date --iso-8601=seconds)" >> $GITHUB_OUTPUT
          echo "version=$(date --iso-8601=date)-${{ github.event.inputs.branch }}" >> $GITHUB_OUTPUT
          echo "revision=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "image_tag=branch-${{ github.event.inputs.branch }}" >> $GITHUB_OUTPUT
      - uses: docker/build-push-action@v5
        with:
          context: branch
          file: branch/Dockerfile
          push: false
          load: true
          tags: amutake/satysfi:${{ steps.args.outputs.image_tag }}
          build-args: |
            BUILD_DATE=${{ steps.args.outputs.date }}
            VERSION=${{ steps.args.outputs.version }}
            REVISION=${{ steps.args.outputs.revision }}
            BRANCH=${{ github.event.inputs.branch }}
            IMAGE_TAG=${{ steps.args.outputs.image_tag }}
          platforms: ${{ matrix.platform }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      # run tests
      - run: docker run --rm amutake/satysfi:${{ steps.args.outputs.image_tag }} satysfi --help
      - run: docker run --rm amutake/satysfi:${{ steps.args.outputs.image_tag }} satyrographos help
      - run: docker run --rm -v $(pwd)/tests:/satysfi amutake/satysfi:${{ steps.args.outputs.image_tag }} satysfi minimum.saty
      - run: docker run --rm -v $(pwd)/tests:/satysfi amutake/satysfi:${{ steps.args.outputs.image_tag }} satysfi with-dist.saty
      - run: git clone --branch ${{ github.event.inputs.branch }} https://github.com/gfngfn/SATySFi.git
      - run: docker run --rm -v $(pwd)/SATySFi/demo:/satysfi amutake/satysfi:${{ steps.args.outputs.image_tag }} satysfi demo.saty
      # push
      - run: docker push amutake/satysfi:${{ steps.args.outputs.image_tag }}
